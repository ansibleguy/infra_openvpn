---

- name: OpenVPN | Add server instances
  ansible.builtin.include_tasks: debian/instance/add.yml
  when:
    - server.state != 'absent'
    - server.enabled | bool
  vars:
    server_name: "{{ instance_item.key | sanitize_name }}"
    server: "{{ defaults_instance | combine(instance_item.value, recursive=true) }}"
    server_base_dir: "{{ OVPN_CONFIG.path.base }}/{{ OVPN_CONFIG.prefix_instance }}{{ server_name }}"
    task_prefix: "OpenVPN | Server '{{ server_name }}' | Add"
  loop_control:
    loop_var: instance_item
  with_dict: "{{ OVPN_CONFIG.instances }}"
  no_log: true  # less output & passwords
  tags: [servers, instances, add]
  args:
    apply:
      tags: [servers, instances, add]

- name: OpenVPN | Enable server instances
  ansible.builtin.include_tasks: debian/instance/enable.yml
  when:
    - server.state != 'absent'
    - server.enabled | bool
  vars:
    server_name: "{{ instance_item.key | sanitize_name }}"
    server: "{{ defaults_instance | combine(instance_item.value, recursive=true) }}"
    task_prefix: "OpenVPN | Server '{{ server_name }}' | Enable"
  loop_control:
    loop_var: instance_item
  with_dict: "{{ OVPN_CONFIG.instances }}"
  no_log: true  # less output & passwords
  tags: [servers, instances, enable]
  args:
    apply:
      tags: [servers, instances, enable]

- name: OpenVPN | Disable server instances
  ansible.builtin.include_tasks: debian/instance/disable.yml
  when:
    - server.state != 'absent'
    - not server.enabled | bool
  vars:
    server_name: "{{ instance_item.key | sanitize_name }}"
    server: "{{ defaults_instance | combine(instance_item.value, recursive=true) }}"
    task_prefix: "OpenVPN | Server '{{ server_name }}' | Disable"
  loop_control:
    loop_var: instance_item
  with_dict: "{{ OVPN_CONFIG.instances }}"
  no_log: true  # less output & passwords
  tags: [servers, instances, disable]
  args:
    apply:
      tags: [servers, instances, disable]

- name: OpenVPN | Remove server instances
  ansible.builtin.include_tasks: debian/instance/remove.yml
  when: server.state == 'absent'
  vars:
    server_name: "{{ instance_item.key | sanitize_name }}"
    server: "{{ defaults_instance | combine(instance_item.value, recursive=true) }}"
    server_base_dir: "{{ OVPN_CONFIG.path.base }}/{{ OVPN_CONFIG.prefix_instance }}{{ server_name }}"
    task_prefix: "OpenVPN | Server '{{ server_name }}' | Remove"
  loop_control:
    loop_var: instance_item
  with_dict: "{{ OVPN_CONFIG.instances }}"
  no_log: true  # less output & passwords
  tags: [servers, instances, remove]
  args:
    apply:
      tags: [servers, instances, remove]
