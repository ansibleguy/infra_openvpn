# {{ ansible_managed }}
# ansibleguy.infra_openvpn

### BASICS ###
mode server
verb {{ server.log_level }}
keepalive {{ server.keepalive }}
ping-timer-rem
persist-tun
persist-key
{% if server.session_timeout_sec | default(none, true) is not none %}
reneg-sec {{ server.session_timeout_sec }}
{% endif %}
{% if server.compress | bool %}
compress
{% endif %}
{% if server.log == 'file' %}
log-append {{ OVPN_CONFIG.path.log }}/{{ server.log_file | replace('$server_name', server_name) }}
{% endif %}

{% if server.status_file | bool %}
status {{ OVPN_HC.path.run }}/{{ server_name }}_{{ OVPN_HC.file.status }}
{% endif %}
{% if server.management_socket | bool %}
management {{ OVPN_HC.path.run }}/{{ server_name }}_mgmt.sock unix
{% endif %}

### NETWORK ###
topology subnet
dev-type tun
dev {{ OVPN_CONFIG.interface_prefix + server_name | safe_int_name }}
tun-mtu {{ server.mtu }}
{% for ip in server.ips | ensure_list %}
local {{ ip }}
{% endfor %}

proto {{ server.proto }}
lport {{ server.port }}
server {{ server.network | network_netmask }}
{% if OVPN_CONFIG.unprivileged | bool %}
iproute {{ OVPN_CONFIG.path.script }}/iproute_wrapper.sh
{% endif %}

{% if server.persistent_ips | bool %}
ifconfig-pool-persist {{ server_base_dir }}/{{ OVPN_HC.file.persist }}
{% endif %}

{% for route in server.push.routes | ensure_list %}
push "route {{ route }}"
{% endfor %}

{% for option in server.push.dhcp_options | ensure_list %}
push "dhcp-option {{ option }}"
{% endfor %}

{% for server in server.push.dns_servers | ensure_list %}
push "dhcp-option DNS {{ server }}"
{% endfor %}

### ENCRYPTION ###
tls-server
ca {{ server_base_dir }}/{{ OVPN_HC.dir.pki.base }}/{{ OVPN_HC.file.ca }}
crl-verify {{ server_base_dir }}/{{ OVPN_HC.dir.pki.base }}/{{ OVPN_HC.file.crl }}
dh {{ server_base_dir }}/{{ OVPN_HC.dir.pki.base }}/{{ OVPN_HC.file.dh }}

cert {{ server_base_dir }}/{{ OVPN_HC.dir.pki.public }}/{{ OVPN_HC.cert_server }}.{{ OVPN_HC.ext.crt }}
key {{ server_base_dir }}/{{ OVPN_HC.dir.pki.private }}/{{ OVPN_HC.cert_server }}.{{ OVPN_HC.ext.key_unenc }}

data-ciphers {{ server.security.cipher.data }}
tls-cipher {{ server.security.cipher.tls }}
tls-version-min {{ server.security.tls_min_version }}
auth {{ server.security.hash_algo }}

### AUTHENTICATION ###
## TLS-AUTH
{% if server.security.tls_crypt | bool %}
tls-crypt {{ server_base_dir }}/{{ OVPN_HC.file.tls_auth_key }}
{% else %}
tls-auth {{ server_base_dir }}/{{ OVPN_HC.file.tls_auth_key }}
{% endif %}

## CERTIFICATES
{% if 'certificate' in server.auth.providers | ensure_list %}
verify-client-cert require
remote-cert-eku "TLS Web Client Authentication"
{% else %}
verify-client-cert none
{% endif %}

## CREDENTIALS
script-security 2
auth-user-pass-verify "{{ server_base_dir }}/auth.py" via-file
username-as-common-name
{% if server.user_multi_connection | bool %}
duplicate-cn
{% endif %}

### CUSTOM ###
{% for line in server.additional_config_lines | ensure_list %}
{{ line }}
{% endfor %}
